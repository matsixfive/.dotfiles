#!/usr/bin/env python

import os
from pip._vendor import tomli


def get_config() -> dict:
    dirname = (os.environ.get('XDG_CONFIG_HOME')
               or os.environ.get('HOME') + '/.config') + '/tmx'
    filename = dirname + '/config.toml'
    exists = os.path.exists(filename)
    if not exists:
        print('Config file not found')
        return
    config = tomli.load(open(filename, 'rb'))
    return config


def gen_cmd(commands: list[list[str]]) -> str:
    commands = []

    for (i, panes) in enumerate(windows):
        for (j, command) in enumerate(panes):
            # only use quotes if command is not empty
            if command:
                command = f'\'{command} ; exec $SHELL\''

            # new session for first pane
            if i == j == 0:
                commands.append(f'new {command}')
            # new window for first pane of each window
            elif j == 0:
                commands.append(f'new-window {command}')
            # vertical split for others
            else:
                commands.append(f'split-window -h {command}')
    commands.append('select-window -t 1')  # go back to first window
    args = ' \';\' '.join(commands)  # separate commands with ';'
    cmd = f'tmux {args}'
    return cmd


if __name__ == '__main__':
    config = get_config()
    if not config:
        exit(1)

    cwd = os.getcwd().rstrip(' /')

    presets = config.get('presets')
    if not presets:
        # print('Error in config: no presets')
        exit(1)

    for preset in presets:
        path = preset.get('path') .replace(
            '~', os.environ.get('HOME')).rstrip(' /')
        if not path:
            print('Error in config: no path')
            exit(1)

        if cwd != path:
            continue

        windows = preset.get('windows')
        if not windows:
            print('Error in config: no windows specified')
            exit(1)

        cmd = gen_cmd(windows)

        os.system(cmd)  # run tmux with generated command
        break

    else:
        os.system('tmux')  # run tmux without any command

    exit(0)
