#!/usr/bin/env zsh

# This file contains all of my aliases and function which
# make my life easier

alias ls="eza --group-directories-first --icons"
alias la="eza --group-directories-first --icons -a"
alias ll="eza --group-directories-first --icons -l"
alias lal="eza --group-directories-first --icons -al"
alias lla="eza --group-directories-first --icons -la"
alias lp="eza --group-directories-first -T -L 4 --icons --git -al --no-time --no-user --no-filesize --no-permissions --git-ignore"

alias lg="lazygit"

alias py="python3"
alias venv="source ./venv/bin/activate"

alias :q="echo 'ðŸ–•'"

alias please="sudo"
alias reload="source ~/.zshrc"

alias open="wsl-open"

pkgsizes() {
	local filter=".*"
	if [[ $# -gt 0 ]]; then
		filter="$1"
	fi

	pacman -Qi |
		rg '^(Name|Installed)' |
		cut -f2 -d':' | tr '\n' '\t' |
		sed -E 's/(([GMK]i)?B)\t/\1\n/g' |
		awk ' { t = $1; $1 = $2 $3; $2 = t; $3 = ""; print; } ' |
		sort  -h |
		awk ' {t = $1; $1 = $2; $2 = t; print; } ' |
		rg "$filter" |
		column -t
}

# just running `git` will run `git status`
git() {
    if [[ $# -eq 0 ]]; then
        command git status
    else
        command git "$@"
    fi
}

paru() {
    if [[ $# -eq 0 ]]; then
        command paru
    else
        command paru --bottomup "$@"
    fi
}

f() {
	local directories=(
		"$HOME/dev"
		"$HOME/uni"
		"$HOME/work"
	)

	local repos=()

	# git repos
	for dir in "${directories[@]}"; do
			while IFS= read -r gitdir; do
				local dir_name="$(dirname "$gitdir")"
        local mod_date=$(stat -c "%Y" "$dir")
				repos+=("$mod_date $dir_name")
			done < <(fd -H --type d ".git" "$dir" 2>/dev/null)
	done

	# other
	for dir in "${directories[@]}"; do
			while IFS= read -r dir_name; do
        local mod_date=$(stat -c "%Y" "$dir")
				repos+=("$mod_date $dir_name")
			done < <(fd . --max-depth 1 "$dir" 2>/dev/null)
	done

	local repos_n=$(
		printf "%s\n" "${repos[@]%/}" |
			awk '!seen[$0]++' |
			sort -n |
			cut -d " " -f 2 |
			sed "s|^$HOME|~|"
		)

	local selected_repo=$(
		printf "%s\n" "$repos_n" |
			fzf --reverse --preview="$HOME/.local/bin/inspect '$(echo "{}" | sed "s|^~|$HOME|")'" --preview-window="right,33%" |
			sed "s|^~|$HOME|"
		)

	if [ -n "$selected_repo" ]; then
			cd "$selected_repo"
	fi
}

config() {
	local directories=(
		"$HOME/.dotfiles"
	)

	local files=()

	for dir in "${directories[@]}"; do
			while IFS= read -r dir_name; do
        local mod_date=$(stat -c "%Y" "$dir")
				files+=("$mod_date $dir_name")
			done < <(fd . -t f --max-depth 1 --hidden "$dir" 2>/dev/null)
	done

	local directories_two=(
		"$HOME/.dotfiles/.config"
	)

	for dir in "${directories_two[@]}"; do
			while IFS= read -r dir_name; do
        local mod_date=$(stat -c "%Y" "$dir")
				files+=("$mod_date $dir_name")
			done < <(fd . --max-depth 1 "$dir" 2>/dev/null)
	done

	local files_n=$(
		printf "%s\n" "${files[@]%/}" |
			awk '!seen[$0]++' |
			sort -n |
			cut -d " " -f 2 |
			sed "s|^$HOME|~|"
		)

	local selected_file=$(
		printf "%s\n" "$files_n" |
			fzf --reverse --preview="$HOME/.local/bin/inspect '$(echo "{}" | sed "s|^~|$HOME|")'" --preview-window="right,33%" |
			sed "s|^~|$HOME|"
		)

	if [ -n "$selected_file" ]; then
		if [[ -d "$selected_file" ]]; then
			cd  "$selected_file"
			nvim .
		elif [[ -f "$selected_file" ]]; then
			nvim  "$selected_file"
		fi
	fi
}
